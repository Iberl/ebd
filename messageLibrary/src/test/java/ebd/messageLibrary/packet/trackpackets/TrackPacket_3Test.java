package ebd.messageLibrary.packet.trackpackets;

import ebd.messageLibrary.packet.TrackPacketTestBase;
import org.junit.jupiter.params.provider.Arguments;

import java.util.stream.Stream;

class TrackPacket_3Test extends TrackPacketTestBase {

    public static Stream<Arguments> data() {
        return Stream.of(
                Arguments.of("default", new Packet_3(), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_DIR: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_DIR: Max", new Packet_3(3, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][3:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_SCALE: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_SCALE: Max", new Packet_3(0, 3, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][3:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_VALIDNV: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_VALIDNV: Max", new Packet_3(0, 0, 32767, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][32767:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),

                Arguments.of("area: NID_C: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(0), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("area: NID_C: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(1023), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][1023:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),

                Arguments.of("areas: Empty", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("areas: 1 Element", fill(new Packet_3(), new Packet_3.Packet_3_Area(), 1), "[3:8][0:2][240:13][0:2][0:15][0:10][1:5]{[0:10]*1}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("areas: NID_C: Min", fill(new Packet_3(), new Packet_3.Packet_3_Area(0), 1), "[3:8][0:2][240:13][0:2][0:15][0:10][1:5]{[0:10]*1}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("areas: NID_C: Max", fill(new Packet_3(), new Packet_3.Packet_3_Area(1023), 1), "[3:8][0:2][240:13][0:2][0:15][0:10][1:5]{[1023:10]*1}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("areas: 1+ Elements", fill(new Packet_3(), new Packet_3.Packet_3_Area(), 2), "[3:8][0:2][250:13][0:2][0:15][0:10][2:5]{[0:10]*2}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("areas: Max Elements", fill(new Packet_3(), new Packet_3.Packet_3_Area(), 31), "[3:8][0:2][540:13][0:2][0:15][0:10][31:5]{[0:10]*31}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),

                Arguments.of("V_NVSHUNT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVSHUNT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 127, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[127:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVSTFF: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVSTFF: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 127, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][127:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVONSIGHT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVONSIGHT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 127, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][127:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVLIMSUPERV: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVLIMSUPERV: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 127, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][127:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVUNFIT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVUNFIT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 127, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][127:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVREL: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVREL: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 127, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][127:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVROLL: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVROLL: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 32767, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][32767:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVSBTSMPERM: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVSBTSMPERM: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, true, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]10000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVEMRRLS: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVEMRRLS: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, true, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]01000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVGUIPERM: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVGUIPERM: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, true, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00100[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVSBFBPERM: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVSBFBPERM: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, true, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00010[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVINHSMICPERM: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVINHSMICPERM: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, true, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00001[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVALLOWOVTRP: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVALLOWOVTRP: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 127, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[127:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVSUPOVTRP: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("V_NVSUPOVTRP: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 127, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][127:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVOVTRP: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVOVTRP: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 32767, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][32767:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("T_NVOVTRP: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("T_NVOVTRP: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 255, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][255:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVPOTRP: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVPOTRP: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 32767, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][32767:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("M_NVCONTACT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("M_NVCONTACT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 3, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][3:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("T_NVCONTACT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("T_NVCONTACT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 255, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][255:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("M_NVDERUN: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("M_NVDERUN: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, true, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]1[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVSTFF: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("D_NVSTFF: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 32767, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[32767:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVDRIVER_ADHES: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVDRIVER_ADHES: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, true, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]1[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("A_NVMAXREDADH1: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("A_NVMAXREDADH1: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 63, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[63:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("A_NVMAXREDADH2: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("A_NVMAXREDADH2: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 63, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][63:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("A_NVMAXREDADH3: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("A_NVMAXREDADH3: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 63, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][63:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVLOCACC: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVLOCACC: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 63, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][63:6][0:5][0:4]0"),
                Arguments.of("M_NVAVADH: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("M_NVAVADH: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 31, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][31:5][0:4]0"),
                Arguments.of("M_NVEBCL: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("M_NVEBCL: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 15), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][15:4]0"),
                Arguments.of("Q_NVKINT: False", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), "[3:8][0:2][230:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]0"),
                Arguments.of("Q_NVKINT: True", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("integrated_correction_factor: Q_NVKVINTSET: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: Q_NVKVINTSET: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(3, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[3:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: A_NVP12: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][295:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[1:2][0:6][0:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: A_NVP12: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(1, 63, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][295:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[1:2][63:6][0:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: A_NVP23: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][295:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[1:2][0:6][0:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: A_NVP23: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 63, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][295:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[1:2][0:6][63:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_step: V_NVKVINT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_step: V_NVKVINT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(127, 0, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][127:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_step: M_NVKVINT12: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_step: M_NVKVINT12: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 127, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][127:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_step: M_NVKVINT23: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_step: M_NVKVINT23: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 127)), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][127:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("integrated_correction_factor: speed_steps: Empty", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: 1 Element", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: V_NVKVINT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: V_NVKVINT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(127, 0, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[127:7][0:7][0:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: M_NVKVINT12: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: M_NVKVINT12: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 127, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[0:7][127:7][0:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: M_NVKVINT23: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: M_NVKVINT23: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 127), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][304:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][127:7]*1}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: 1+ Elements", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(), 2), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][325:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][2:5]{[0:7][0:7][0:7]*2}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factor: speed_steps: Max Elements", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(), 31), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][934:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][31:5]{[0:7][0:7][0:7]*31}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("integrated_correction_factors: Empty", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: 1 Element", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: Q_NVKVINTSET: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: Q_NVKVINTSET: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(3, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[3:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: A_NVP12: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][323:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[1:2][0:6][0:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: A_NVP12: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(1, 63, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][323:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[1:2][63:6][0:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: A_NVP23: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][323:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[1:2][0:6][0:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: A_NVP23: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 63, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][323:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[1:2][0:6][63:6][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_step: V_NVKVINT: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0)), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_step: V_NVKVINT: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(127, 0, 0)), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][127:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_step: M_NVKVINT12: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0)), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_step: M_NVKVINT12: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 127, 0)), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][127:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_step: M_NVKVINT23: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0)), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_step: M_NVKVINT23: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 127)), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][127:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("integrated_correction_factors: speed_steps: Empty", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), "[3:8][0:2][311:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: 1 Element", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: V_NVKVINT: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: V_NVKVINT: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(127, 0, 0), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[127:7][0:7][0:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: M_NVKVINT12: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: M_NVKVINT12: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 127, 0), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[0:7][127:7][0:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: M_NVKVINT23: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 0), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][0:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: M_NVKVINT23: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 127), 1), 1), "[3:8][0:2][332:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][1:5]{[0:7][0:7][127:7]*1}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: 1+ Elements", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(), 2), 1), "[3:8][0:2][353:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][2:5]{[0:7][0:7][0:7]*2}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: speed_steps: Max Elements", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(), 31), 1), "[3:8][0:2][962:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[1:5]{[0:2][0:7][0:7][0:7][31:5]{[0:7][0:7][0:7]*31}*1}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("integrated_correction_factors: 1+ Element", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 127)), 2), "[3:8][0:2][339:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[2:5]{[0:2][0:7][0:7][127:7][0:5]{[0:7][0:7][0:7]*0}*2}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("integrated_correction_factors: Max Element", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 127)), 31), "[3:8][0:2][1151:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[31:5]{[0:2][0:7][0:7][127:7][0:5]{[0:7][0:7][0:7]*0}*31}[0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("length_step: L_NVKRINT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(0, 0), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("length_step: L_NVKRINT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(31, 0), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][31:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("length_step: M_NVKRINT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(0, 0), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("length_step: M_NVKRINT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(0, 31), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][31:5][0:5]{[0:5][0:5]*0}[0:5]"),

                Arguments.of("length_steps: Empty", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("length_steps: 1 Element", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(), 1), "[3:8][0:2][293:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][1:5]{[0:5][0:5]*1}[0:5]"),
                Arguments.of("length_steps: L_NVKRINT: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(0, 0), 1), "[3:8][0:2][293:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][1:5]{[0:5][0:5]*1}[0:5]"),
                Arguments.of("length_steps: L_NVKRINT: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(31, 0), 1), "[3:8][0:2][293:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][1:5]{[31:5][0:5]*1}[0:5]"),
                Arguments.of("length_steps: M_NVKRINT: Min", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(0, 0), 1), "[3:8][0:2][293:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][1:5]{[0:5][0:5]*1}[0:5]"),
                Arguments.of("length_steps: M_NVKRINT: Max", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(0, 31), 1), "[3:8][0:2][293:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][1:5]{[0:5][31:5]*1}[0:5]"),
                Arguments.of("length_steps: 1+ Elements", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(), 2), "[3:8][0:2][303:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][2:5]{[0:5][0:5]*2}[0:5]"),
                Arguments.of("length_steps: Max Elements", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(), 31), "[3:8][0:2][593:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][31:5]{[0:5][0:5]*31}[0:5]"),

                Arguments.of("M_NVKTINT: Min", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[0:5]"),
                Arguments.of("M_NVKTINT: Max", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 31), "[3:8][0:2][283:13][0:2][0:15][0:10][0:5]{[0:10]*0}[0:7][0:7][0:7][0:7][0:7][0:7][0:15]00000[0:7][0:7][0:15][0:8][0:15][0:2][0:8]0[0:15]0[0:6][0:6][0:6][0:6][0:5][0:4]1[0:2][0:7][0:7][0:7][0:5]{[0:7][0:7][0:7]*0}[0:5][0:5][0:5][0:5]{[0:5][0:5]*0}[31:5]"),

                Arguments.of("all", fill(fill(fill(new Packet_3(3, 3, 32767, new Packet_3.Packet_3_Area(1023), 127, 127, 127, 127, 127, 127, 32767, true, false, true, false, true, 127, 127, 32767, 255, 32767, 3, 255, true, 32767, true, 63, 63, 63, 63, 31, 15, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(1, 63, 63, new Packet_3.Packet_3_KV_Speed_Step(127, 127, 127)), new Packet_3.Packet_3_KV_Speed_Step(127, 127, 127), 1), new Packet_3.Packet_3_KR_Length_Step(31, 31), 31), new Packet_3.Packet_3_Area(1023), 1), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(1, 63, 63, new Packet_3.Packet_3_KV_Speed_Step(127, 127, 127)), new Packet_3.Packet_3_KV_Speed_Step(127, 127, 127), 1), 1), new Packet_3.Packet_3_KR_Length_Step(31, 31),1), "[3:8][3:2][397:13][3:2][32767:15][1023:10][1:5]{[1023:10]*1}[127:7][127:7][127:7][127:7][127:7][127:7][32767:15]10101[127:7][127:7][32767:15][255:8][32767:15][3:2][255:8]1[32767:15]1[63:6][63:6][63:6][63:6][31:5][15:4]1[1:2][63:6][63:6][127:7][127:7][127:7][1:5]{[127:7][127:7][127:7]*1}[1:5]{[1:2][63:6][63:6][127:7][127:7][127:7][1:5]{[127:7][127:7][127:7]*1}*1}[31:5][31:5][1:5]{[31:5][31:5]*1}[31:5]")

        );
    }

    public static Stream<Arguments> errors() {
        return Stream.of(
                Arguments.of("Q_DIR: Overflow", new Packet_3(4, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("Q_SCALE: Overflow", new Packet_3(0, 4, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("D_VALIDNV: Overflow", new Packet_3(0, 0, 32768, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("area: NID_C: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(1024), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("areas: NID_C: Overflow", fill(new Packet_3(), new Packet_3.Packet_3_Area(1024), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVSHUNT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 128, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVSTFF: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 128, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVONSIGHT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 128, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVLIMSUPERV: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 128, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVUNFIT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 128, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVREL: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 128, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("D_NVROLL: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 32768, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                // Q_NVSBTSMPERM is a boolean -> no overflow test needed
                // Q_NVEMRRLS is a boolean -> no overflow test needed
                // Q_NVGUIPERM is a boolean -> no overflow test needed
                // Q_NVSBFBPERM is a boolean -> no overflow test needed
                // Q_NVINHSMICPERM is a boolean -> no overflow test needed
                Arguments.of("V_NVALLOWOVTRP: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 128, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("V_NVSUPOVTRP: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 128, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("D_NVOVTRP: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 32768, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("T_NVOVTRP: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 256, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("D_NVPOTRP: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 32768, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("M_NVCONTACT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 4, 0, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("T_NVCONTACT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 256, false, 0, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                // M_NVDERUN is a boolean -> no overflow test needed
                Arguments.of("D_NVSTFF: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 32768, false, 0, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                // Q_NVDRIVER_ADHES is a boolean -> no overflow test needed
                Arguments.of("A_NVMAXREDADH1: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 64, 0, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("A_NVMAXREDADH2: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 64, 0, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("A_NVMAXREDADH3: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 64, 0, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("Q_NVLOCACC: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 64, 0, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("M_NVAVADH: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 32, 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("M_NVEBCL: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 16), new IllegalArgumentException("Invalid value for given bit length")),
                // Q_NVKINT is a boolean -> no overflow test needed

                Arguments.of("integrated_correction_factor: Q_NVKVINTSET: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(4, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: A_NVP12: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(1, 64, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: A_NVP23: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 64, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: speed_step: V_NVKVINT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(128, 0, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: speed_step: M_NVKVINT12: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 128, 0)), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: speed_step: M_NVKVINT23: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 128)), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("integrated_correction_factor: speed_steps: V_NVKVINT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(128, 0, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: speed_steps: M_NVKVINT12: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 128, 0), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factor: speed_steps: M_NVKVINT23: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, fill(new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 128), 1), new Packet_3.Packet_3_KR_Length_Step(), 0), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("integrated_correction_factors: Q_NVKVINTSET: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(4, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: A_NVP12: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(1, 64, 0, new Packet_3.Packet_3_KV_Speed_Step()), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: A_NVP23: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(1, 0, 64, new Packet_3.Packet_3_KV_Speed_Step()), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: speed_step: V_NVKVINT: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(128, 0, 0)), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: speed_step: M_NVKVINT12: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 128, 0)), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: speed_step: M_NVKVINT23: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step(0, 0, 128)), 1), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("integrated_correction_factors: speed_steps: V_NVKVINT: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(128, 0, 0), 1), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: speed_steps: M_NVKVINT12: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 128, 0), 1), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("integrated_correction_factors: speed_steps: M_NVKVINT23: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), fill(new Packet_3.Packet_3_Integrated_Correction_Factor(0, 0, 0, new Packet_3.Packet_3_KV_Speed_Step()), new Packet_3.Packet_3_KV_Speed_Step(0, 0, 128), 1), 1), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("length_step: L_NVKRINT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(32, 0), 0), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("length_step: M_NVKRINT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(0, 32), 0), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("length_steps: L_NVKRINT: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(32, 0), 1), new IllegalArgumentException("Invalid value for given bit length")),
                Arguments.of("length_steps: M_NVKRINT: Overflow", fill(new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 0), new Packet_3.Packet_3_KR_Length_Step(0, 32), 1), new IllegalArgumentException("Invalid value for given bit length")),

                Arguments.of("M_NVKTINT: Overflow", new Packet_3(0, 0, 0, new Packet_3.Packet_3_Area(), 0, 0, 0, 0, 0, 0, 0, false, false, false, false, false, 0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, 0, 0, 0, 0, 0, new Packet_3.Packet_3_Integrated_Correction_Factor(), new Packet_3.Packet_3_KR_Length_Step(), 32), new IllegalArgumentException("Invalid value for given bit length"))
        );
    }

    public static Packet_3 fill(Packet_3 packet_3, Packet_3.Packet_3_Area area, int count) {
        assert(count < 32);
        for(int i = 0; i < count; i++) {
            packet_3.areas.add(area);
        }
        return packet_3;
    }

    public static Packet_3 fill(Packet_3 packet_3, Packet_3.Packet_3_Integrated_Correction_Factor integrated_correction_factor, int count) {
        assert(count < 32);
        for(int i = 0; i < count; i++) {
            packet_3.integrated_correction_factors.add(integrated_correction_factor);
        }
        return packet_3;
    }

    public static Packet_3.Packet_3_Integrated_Correction_Factor fill(Packet_3.Packet_3_Integrated_Correction_Factor integrated_correction_factor, Packet_3.Packet_3_KV_Speed_Step speed_step, int count) {
        assert(count < 32);
        for(int i = 0; i < count; i++) {
            integrated_correction_factor.speed_steps.add(speed_step);
        }
        return integrated_correction_factor;
    }

    public static Packet_3 fill(Packet_3 packet_3, Packet_3.Packet_3_KR_Length_Step length_step, int count) {
        assert(count < 32);
        for(int i = 0; i < count; i++) {
            packet_3.length_steps.add(length_step);
        }
        return packet_3;
    }

}